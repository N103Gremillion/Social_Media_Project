{"ast":null,"code":"var _jsxFileName = \"/home/nathan/Desktop/social_meida/getgood_app/src/pages/Login.tsx\",\n  _s = $RefreshSig$();\nimport { Container, Box, Typography, TextField, Button } from \"@mui/material\";\nimport { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const handleLogin = () => {\n    alert(username + \" \" + password);\n    return /*#__PURE__*/_jsxDEV(Link, {\n      to: \"Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"xs\",\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          mt: 20,\n          display: \"flex\",\n          flexDirection: \"column\",\n          alignItems: \"center\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          margin: \"normal\",\n          required: true,\n          fullWidth: true,\n          id: \"username\",\n          label: \"Username\",\n          name: \"username\",\n          value: username,\n          onChange: e => setUsername(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          margin: \"normal\",\n          required: true,\n          fullWidth: true,\n          id: \"password\",\n          name: \"password\",\n          label: \"Password\",\n          type: \"password\",\n          value: password,\n          onChange: e => {\n            setPassword(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          fullWidth: true,\n          variant: \"contained\",\n          sx: {\n            mt: 3,\n            mb: 2\n          },\n          onClick: handleLogin,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"SignUp\",\n          children: \"Sign Up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_s(Login, \"Lrw7JeD9zj6OUWhT/IH4OIvPKEk=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["Container","Box","Typography","TextField","Button","useState","Link","jsxDEV","_jsxDEV","Fragment","_Fragment","Login","_s","username","setUsername","password","setPassword","handleLogin","alert","to","fileName","_jsxFileName","lineNumber","columnNumber","children","maxWidth","sx","mt","display","flexDirection","alignItems","variant","margin","required","fullWidth","id","label","name","value","onChange","e","target","type","mb","onClick","_c","$RefreshReg$"],"sources":["/home/nathan/Desktop/social_meida/getgood_app/src/pages/Login.tsx"],"sourcesContent":["import {\n    Container,\n    Box,\n    Typography,\n    TextField,\n    Button,\n  } from \"@mui/material\";\nimport {useState} from \"react\";\nimport {Link} from \"react-router-dom\"\n\n\nconst Login = () => {\n    const [username, setUsername] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n\n    const handleLogin = () => {\n        alert(username + \" \" + password)\n        \n        return (\n            <Link\n            to=\"Dashboard\"></Link>\n        );\n    }\n\n    return (\n        <>\n            <Container maxWidth=\"xs\">\n                <Box sx={{\n                    mt: 20,\n                    display: \"flex\",\n                    flexDirection: \"column\",\n                    alignItems: \"center\"\n                }}\n                >\n                    <Typography variant=\"h5\">Login</Typography>\n                    <TextField\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        id=\"username\"\n                        label=\"Username\"\n                        name=\"username\"\n                        value={username}\n                        onChange={(e) => setUsername(e.target.value)}\n                    />\n\n                    <TextField\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        id=\"password\"\n                        name=\"password\"\n                        label=\"Password\"\n                        type=\"password\"\n                        value={password}\n                        onChange={(e) => {\n                        setPassword(e.target.value);\n                        }}\n                    />\n\n                    <Button\n                        fullWidth\n                        variant=\"contained\"\n                        sx={{ mt: 3, mb: 2 }}\n                        onClick={handleLogin}\n                    >Login\n                    </Button>\n                    <Link to=\"SignUp\">Sign Up</Link>\n                </Box>\n            </Container>\n        </>\n    )\n}\n\nexport default Login"],"mappings":";;AAAA,SACIA,SAAS,EACTC,GAAG,EACHC,UAAU,EACVC,SAAS,EACTC,MAAM,QACD,eAAe;AACxB,SAAQC,QAAQ,QAAO,OAAO;AAC9B,SAAQC,IAAI,QAAO,kBAAkB;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAGrC,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACU,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMY,WAAW,GAAGA,CAAA,KAAM;IACtBC,KAAK,CAACL,QAAQ,GAAG,GAAG,GAAGE,QAAQ,CAAC;IAEhC,oBACIP,OAAA,CAACF,IAAI;MACLa,EAAE,EAAC;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC;EAE9B,CAAC;EAED,oBACIf,OAAA,CAAAE,SAAA;IAAAc,QAAA,eACIhB,OAAA,CAACR,SAAS;MAACyB,QAAQ,EAAC,IAAI;MAAAD,QAAA,eACpBhB,OAAA,CAACP,GAAG;QAACyB,EAAE,EAAE;UACLC,EAAE,EAAE,EAAE;UACNC,OAAO,EAAE,MAAM;UACfC,aAAa,EAAE,QAAQ;UACvBC,UAAU,EAAE;QAChB,CAAE;QAAAN,QAAA,gBAEEhB,OAAA,CAACN,UAAU;UAAC6B,OAAO,EAAC,IAAI;UAAAP,QAAA,EAAC;QAAK;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAY,CAAC,eAC3Cf,OAAA,CAACL,SAAS;UACN6B,MAAM,EAAC,QAAQ;UACfC,QAAQ;UACRC,SAAS;UACTC,EAAE,EAAC,UAAU;UACbC,KAAK,EAAC,UAAU;UAChBC,IAAI,EAAC,UAAU;UACfC,KAAK,EAAEzB,QAAS;UAChB0B,QAAQ,EAAGC,CAAC,IAAK1B,WAAW,CAAC0B,CAAC,CAACC,MAAM,CAACH,KAAK;QAAE;UAAAlB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChD,CAAC,eAEFf,OAAA,CAACL,SAAS;UACN6B,MAAM,EAAC,QAAQ;UACfC,QAAQ;UACRC,SAAS;UACTC,EAAE,EAAC,UAAU;UACbE,IAAI,EAAC,UAAU;UACfD,KAAK,EAAC,UAAU;UAChBM,IAAI,EAAC,UAAU;UACfJ,KAAK,EAAEvB,QAAS;UAChBwB,QAAQ,EAAGC,CAAC,IAAK;YACjBxB,WAAW,CAACwB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAC;UAC3B;QAAE;UAAAlB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL,CAAC,eAEFf,OAAA,CAACJ,MAAM;UACH8B,SAAS;UACTH,OAAO,EAAC,WAAW;UACnBL,EAAE,EAAE;YAAEC,EAAE,EAAE,CAAC;YAAEgB,EAAE,EAAE;UAAE,CAAE;UACrBC,OAAO,EAAE3B,WAAY;UAAAO,QAAA,EACxB;QACD;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACTf,OAAA,CAACF,IAAI;UAACa,EAAE,EAAC,QAAQ;UAAAK,QAAA,EAAC;QAAO;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/B;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC;EAAC,gBACd,CAAC;AAEX,CAAC;AAAAX,EAAA,CA7DKD,KAAK;AAAAkC,EAAA,GAALlC,KAAK;AA+DX,eAAeA,KAAK;AAAA,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}